#!/usr/bin/env node

'use strict';

var path = require('path');
var util = require('util');
var program = require('commander');
var jshint = require('jshint').JSHINT;
var buildGroups = require('../lib/buildGroups');
var Linter = require('../lib/Linter');
var defaultReporter = require('../lib/reporters/default');

program
    .usage('[options] [file...]')
    .version(require('../package').version)
    .option('--config <path>', 'specify configuration file (default .jshint-groups.js)', '.jshint-groups.js')
    .option('--verbose', 'run jshint in verbose mode (show message codes)')
    .option('--reporter <path>', 'specify jshint reporter')
    .option('--debug', 'print groups and exit')
    .parse(process.argv);

var config;
var configPath = program.config;
try {
    config = require(path.resolve(configPath));
} catch (e) {
    if (e.code === 'MODULE_NOT_FOUND') {
        console.error('Config "%s" not found.', configPath);
        process.exit(1);
    }
    throw e;
}

var files = program.args.length && program.args;
var groups = buildGroups(config, files);
if (program.debug) {
    console.log(util.inspect(groups, {depth: null}));
    process.exit(0);
}

var reporter;
var reporterPath = program.reporter;
if (reporterPath) {
    reporter = require(path.resolve(reporterPath));
} else {
    reporter = defaultReporter;
}

var linter = new Linter(jshint, reporter);

if (program.verbose) {
    linter.enableVerboseMode();
}

var success = linter.run(groups, function (groupName) {
    console.log('lint group "%s"', groupName);
});
if (!success) {
    process.exit(1);
}

// vim: set filetype=javascript:
